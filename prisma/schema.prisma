generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model Subscriber {
  id           String       @id @default(cuid())
  email        String       @unique
  name         String?
  status       String       @default("ACTIVE")  // "ACTIVE", "BOUNCED", "UNSUB"
  tier         String       @default("FREE")    // "FREE", "PAID"
  source       String?
  stripeId     String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  emailEvents  EmailEvent[]
}

model EmailEvent {
  id           String     @id @default(cuid())
  subscriber   Subscriber @relation(fields: [subscriberId], references: [id])
  subscriberId String
  messageId    String?
  type         String     // "delivered", "opened", "clicked"
  ts           DateTime   @default(now())
  meta         String?    // JSON as string
}

model Letter {
  id         String    @id @default(cuid())
  slug       String    @unique
  subject    String
  theme      String
  lineToKeep String
  bodyJson   String    // JSON as string
  bodyHtml   String
  bodyText   String
  status     String    @default("DRAFT")  // "DRAFT", "SCHEDULED", "SENT"
  sendAt     DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Order {
  id          String   @id @default(cuid())
  email       String
  productId   String
  license     String   // 'personal' | 'commercial' | 'extended'
  amount      Int      // Amount in smallest currency unit (pence/cents)
  currency    String   // 'GBP' | 'USD'
  stripeSessionId String? @unique
  createdAt   DateTime @default(now())
  fulfilled   Boolean  @default(false)
  downloadUrl String?
  upgradeFromOrderId String? // If this is an upgrade, reference to original order
  
  @@index([email])
  @@index([productId])
  @@index([stripeSessionId])
}
